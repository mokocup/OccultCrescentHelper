name: Build Plugin

env:
    plugin_name: OccultCrescentHelper
    plugin_dir: OccultCrescentHelper

on:
    push:
        branches:
            - "**"
        paths-ignore:
            - .editorconfig
            - .gitattributes
            - .gitignore
            - CHANGELOG.md
            - LICENSE
            - README.md
            - repo.json

    workflow_dispatch:
        inputs:
            dalamud_branch:
                description: 'Dalamud Branch'
                required: true
                default: 'master'
                type: choice
                options:
                    - master
                    - stg

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        env:
            NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
        
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: true

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  cache: true
                  cache-dependency-path: ${{ env.plugin_dir }}/packages.lock.json
                  dotnet-version: 9.0.x

            - name: Determine Dalamud Branch
              id: branch
              run: |
                  COMMIT_MSG='${{ github.event.head_commit.message }}'
                  if [[ -n "${{ github.event.inputs.dalamud_branch }}" ]]; then
                    echo "branch=${{ github.event.inputs.dalamud_branch }}" >> $GITHUB_OUTPUT
                  elif [[ "${{ github.event.ref }}" == "refs/heads/stg" ]] || [[ "$COMMIT_MSG" == "[stg]"* ]]; then
                    echo "branch=stg" >> $GITHUB_OUTPUT
                  else
                    echo "branch=master" >> $GITHUB_OUTPUT
                  fi

            - name: Download Dalamud
              env:
                  DALAMUD_URL: >
                      ${{ fromJson('{
                        "master": "https://goatcorp.github.io/dalamud-distrib/latest.zip",
                        "stg": "https://goatcorp.github.io/dalamud-distrib/stg/latest.zip",
                      }')[steps.branch.outputs.branch] }}
              run: |
                  curl -o latest.zip ${{ env.DALAMUD_URL }}
                  mkdir -p ~/.xlcore/dalamud/Hooks/dev/
                  unzip latest.zip -d ~/.xlcore/dalamud/Hooks/dev/

            - name: Restore dependencies
              run: dotnet restore --locked-mode

            - name: Build
              run: dotnet build --no-restore -c Release -clp:NoSummary

            - name: Get project path
              id: project_path
              run: |
                  PROJECT_FILE=$(dotnet sln list | grep -i "${{ env.plugin_dir }}")
                  PROJECT_PATH=$(dirname "$PROJECT_FILE")
                  echo "project_path=$PROJECT_PATH" >> $GITHUB_OUTPUT

            - name: Rename manifest
              if: github.event_name != 'pull_request'
              run: mv ${{ steps.project_path.outputs.project_path }}/bin/x64/Release/${{ env.plugin_name }}/${{ env.plugin_name }}.json ${{ steps.project_path.outputs.project_path }}/bin/x64/Release/${{ env.plugin_name }}/manifest.json

            - name: Upload Build Artifact
              if: github.event_name != 'pull_request'
              uses: actions/upload-artifact@v4
              with:
                  path: ${{ steps.project_path.outputs.project_path }}/bin/Release/${{ env.plugin_name }}/*

