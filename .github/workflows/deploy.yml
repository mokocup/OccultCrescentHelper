name: Deploy Plugin

env:
    plugin_name: OccultCrescentHelper
    plugin_dir: OccultCrescentHelper
    plugin_default_version_bump: bump-build 

on:
    push:
        tags:
            - 'v[0-9]*'
    workflow_dispatch:
        inputs:
            dalamud_branch:
                description: 'Dalamud Branch'
                required: true
                default: 'master'
                type: choice
                options:
                    - master
                    - stg
            version_bump:
                description: 'Version Bump'
                required: true
                default: 'bump-build'
                type: choice
                options:
                    - bump-major
                    - bump-minor
                    - bump-build
                    - bump-revision
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        env:
            NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
        
        steps:
            -   uses: actions/checkout@v4
                with:
                    submodules: true

            -   name: Setup .NET
                uses: actions/setup-dotnet@v4
                with:
                    cache: true
                    cache-dependency-path: ${{ env.plugin_dir }}/packages.lock.json
                    dotnet-version: 9.0.x

            -   name: Determine Dalamud Branch
                id: branch
                run: |
                    COMMIT_MSG='${{ github.event.head_commit.message }}'
                    if [[ -n "${{ github.event.inputs.dalamud_branch }}" ]]; then
                      echo "branch=${{ github.event.inputs.dalamud_branch }}" >> $GITHUB_OUTPUT
                    elif [[ "${{ github.event.ref }}" == "refs/heads/stg" ]] || [[ "$COMMIT_MSG" == "[stg]"* ]]; then
                      echo "branch=stg" >> $GITHUB_OUTPUT
                    else
                      echo "branch=master" >> $GITHUB_OUTPUT
                    fi

            -   name: Download Dalamud
                env:
                    DALAMUD_URL: >
                        ${{ fromJson('{
                          "master": "https://goatcorp.github.io/dalamud-distrib/latest.zip",
                          "stg": "https://goatcorp.github.io/dalamud-distrib/stg/latest.zip",
                        }')[steps.branch.outputs.branch] }}
                run: |
                    curl -o latest.zip ${{ env.DALAMUD_URL }}
                    mkdir -p ~/.xlcore/dalamud/Hooks/dev/
                    unzip latest.zip -d ~/.xlcore/dalamud/Hooks/dev/

            -   name: Restore dependencies
                run: dotnet restore --locked-mode

            -   name: Build
                run: dotnet build --no-restore -c Release -clp:NoSummary

            -   name: Get project path
                id: project_path
                run: |
                    PROJECT_FILE=$(dotnet sln list | grep -i "${{ env.plugin_dir }}")
                    PROJECT_PATH=$(dirname "$PROJECT_FILE")
                    echo "project_path=$PROJECT_PATH" >> $GITHUB_OUTPUT

            -   name: Rename manifest
                if: github.event_name != 'pull_request'
                run: mv ${{ steps.project_path.outputs.project_path }}/bin/x64/Release/${{ env.plugin_name }}/${{ env.plugin_name }}.json ${{ steps.project_path.outputs.project_path }}/bin/x64/Release/${{ env.plugin_name }}/manifest.json

            -   name: Upload Build Artifact
                if: github.event_name != 'pull_request'
                uses: actions/upload-artifact@v4
                with:
                    path: ${{ steps.project_path.outputs.project_path }}/bin/x64/Release/${{ env.plugin_name }}/*
    release:
        name: Deploy
        needs: build
        if: success() && startsWith(github.ref, 'refs/tags/') && github.event_name != 'pull_request'
        runs-on: ubuntu-latest
        env:
            NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
        
        steps:
            -   uses: actions/checkout@v4

            -   name: Download Build Artifact
                uses: actions/download-artifact@v4

            -   name: Extract release notes
                id: extract-release-notes
                uses: ffurrer2/extract-release-notes@v2

            -   name: Bump build version
                id: bump
                uses: vers-one/dotnet-project-version-updater@v1.7
                with:
                    file: "OccultCrescentHelper/OccultCrescentHelper.csproj"
                    version: ${{ github.event.inputs.version_bump || env.plugin_default_version_bump }}

            -   name: Release
                uses: softprops/action-gh-release@v2
                with:
                    name: ${{ env.plugin_name }} ${{ steps.bump.outputs.newVersion }}
                    body: ${{ steps.extract-release-notes.outputs.release_notes }}
                    files: artifact/*
                    make_latest: true
                    
            -   name: Trigger Repo Update
                uses: peter-evans/repository-dispatch@v3
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}
                    repository: ${{ github.repository_owner }}/${{ github.event.repository.name }}
                    event-type: new-release

            -   name: Update repo.json
                run: |
                    ver="${{ steps.bump.outputs.newVersion }}"
                    path="./repo.json"
                    
                    json=$(jq '.' "$path")
                    
                    json=$(echo "$json" | jq ".[0].AssemblyVersion = \"$ver\"")
                    json=$(echo "$json" | jq ".[0].DownloadLinkInstall |= sub(\"[^/]+/latest.zip\"; \"v$ver/latest.zip\")")
                    json=$(echo "$json" | jq ".[0].DownloadLinkUpdate |= sub(\"[^/]+/latest.zip\"; \"v$ver/latest.zip\")")
                    
                    echo "$json" > "$path"

            -   name: Commit repo.json and version bump
                run: |
                    git config --global user.name "Actions User"
                    git config --global user.email "actions@github.com"
                    git fetch origin master
                    git branch -f master ${{ github.sha }}
                    git checkout master
                    git add repo.json OccultCrescentHelper/OccultCrescentHelper.csproj
                    git commit -m "[CI] Updating repo.json for ${{ steps.bump.outputs.newVersion }}" || true
                    git push origin master

